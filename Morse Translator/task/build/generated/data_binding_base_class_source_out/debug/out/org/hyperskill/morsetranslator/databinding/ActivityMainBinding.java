// Generated by view binder compiler. Do not edit!
package org.hyperskill.morsetranslator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.hyperskill.morsetranslator.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btClear;

  @NonNull
  public final Button btGuide;

  @NonNull
  public final EditText etMorse;

  @NonNull
  public final EditText etText;

  @NonNull
  public final TextView tvMorse;

  @NonNull
  public final TextView tvText;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btClear,
      @NonNull Button btGuide, @NonNull EditText etMorse, @NonNull EditText etText,
      @NonNull TextView tvMorse, @NonNull TextView tvText) {
    this.rootView = rootView;
    this.btClear = btClear;
    this.btGuide = btGuide;
    this.etMorse = etMorse;
    this.etText = etText;
    this.tvMorse = tvMorse;
    this.tvText = tvText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_clear;
      Button btClear = ViewBindings.findChildViewById(rootView, id);
      if (btClear == null) {
        break missingId;
      }

      id = R.id.bt_guide;
      Button btGuide = ViewBindings.findChildViewById(rootView, id);
      if (btGuide == null) {
        break missingId;
      }

      id = R.id.et_morse;
      EditText etMorse = ViewBindings.findChildViewById(rootView, id);
      if (etMorse == null) {
        break missingId;
      }

      id = R.id.et_text;
      EditText etText = ViewBindings.findChildViewById(rootView, id);
      if (etText == null) {
        break missingId;
      }

      id = R.id.tv_morse;
      TextView tvMorse = ViewBindings.findChildViewById(rootView, id);
      if (tvMorse == null) {
        break missingId;
      }

      id = R.id.tv_text;
      TextView tvText = ViewBindings.findChildViewById(rootView, id);
      if (tvText == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btClear, btGuide, etMorse, etText,
          tvMorse, tvText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
